#!/usr/bin/env bash

# WARNING: Run this script at your own risk.


if [ "$(id -u)" = 0 ]; then
    echo "##################################################################"
    echo "This script MUST NOT be run as root user since it makes changes"
    echo "to the \$HOME directory of the \$USER executing this script."
    echo "The \$HOME directory of the root user is, of course, '/root'."
    echo "We don't want to mess around in there. So run this script as a"
    echo "normal user. You will be asked for a sudo password when necessary."
    echo "##################################################################"
    exit 1
fi

error() { \
    clear; printf "ERROR:\\n%s\\n" "$1" >&2; exit 1;
}

echo "################################################################"
echo "## Syncing the repos and installing 'dialog' if not installed ##"
echo "################################################################"
sudo pacman --noconfirm --needed -Syu dialog || error "Error syncing the repos."

welcome() { \
    dialog --colors --title "\Z7\ZbInstalling!" --msgbox "\Z4This is a script that will install what I sarcastically call DTOS (DT's operating system).  It's really just an installation script for those that want to try out my tiling window manager configurations and associated programs.  You will be asked to enter your sudo password at various points during this installation, so stay near the computer.\\n\\n-DT (Derek Taylor, aka DistroTube)" 16 60
}

welcome || error "User choose to exit."

speedwarning() { \
    dialog --colors --title "\Z7\ZbInstalling!" --yes-label "Continue" --no-label "Exit" --yesno  "\Z4WARNING! The ParallelDownloads option is not enabled in /etc/pacman.conf. This may result in slower installation speeds. Are you sure you want to continue?" 16 60 || error "User choose to exit."
}

distrowarning() { \
    dialog --colors --title "\Z7\ZbInstalling!" --yes-label "Continue" --no-label "Exit" --yesno  "\Z4WARNING! While this script works on all Arch based distros, some distros choose to package certain things that we also package, please look at the package list and remove conflicts manually. Are you sure you want to continue?" 16 60 || error "User choose to exit."
}

grep -qs "#ParallelDownloads" /etc/pacman.conf && speedwarning
grep -qs "ID=arch" /etc/os-release || distrowarning

localewarning() { \
        [[ -z $LANG || -z $LC_CTYPE ]] && \
        dialog --colors --title "\Z7\ZbInstalling!" --msgbox "\Z4WARNING! Your locales have not been set! Please check that both the LANG and LC_CTYPE variables are set to the appropriate locale in /etc/locale.conf (NOTE: they should both be the same). Run 'sudo locale-gen', reboot and run the script again. You can reference the Arch Wiki while doing so: https://wiki.archlinux.org/title/locale" 16 60 && error "Your locales have not been set! Please check that both the LANG and LC_CTYPE variables are set to the appropriate locale in /etc/locale.conf (NOTE: they should both be the same). Run 'sudo locale-gen', reboot and run the script again. You can reference the Arch Wiki while doing so: https://wiki.archlinux.org/title/locale"
}

localewarning

lastchance() { \
    dialog --colors --title "\Z7\ZbInstalling!" --msgbox "\Z4WARNING! installation script is currently in public beta testing. There are almost certainly errors in it; therefore, it is strongly recommended that you not install this on production machines. It is recommended that you try this out in either a virtual machine or on a test machine." 16 60

    dialog --colors --title "\Z7\ZbAre You Sure You Want To Do This?" --yes-label "Begin Installation" --no-label "Exit" --yesno "\Z4Shall we begin installing DTOS?" 8 60 || { clear; exit 1; }
}

lastchance || error "User choose to exit."

addrepo() { \
    echo "#########################################################"
    echo "## Adding the DTOS core repository to /etc/pacman.conf ##"
    echo "#########################################################"
    grep -qxF "[dtos-core-repo]" /etc/pacman.conf ||
        ( echo " "; echo "[dtos-core-repo]"; echo "SigLevel = Required DatabaseOptional"; \
        echo "Server = https://gitlab.com/dtos/\$repo/-/raw/main/\$arch") | sudo tee -a /etc/pacman.conf
}

addrepo || error "Error adding DTOS repo to /etc/pacman.conf."

addkeyserver() { \
    echo "#######################################################"
    echo "## Adding keyservers to /etc/pacman.d/gnupg/gpg.conf ##"
    echo "#######################################################"
    grep -qxF "keyserver.ubuntu.com:80" /etc/pacman.d/gnupg/gpg.conf || echo "keyserver hkp://keyserver.ubuntu.com:80" | sudo tee -a /etc/pacman.d/gnupg/gpg.conf
    grep -qxF "keyserver.ubuntu.com:443" /etc/pacman.d/gnupg/gpg.conf || echo "keyserver hkps://keyserver.ubuntu.com:443" | sudo tee -a /etc/pacman.d/gnupg/gpg.conf
}

addkeyserver || error "Error adding keyservers to /etc/pacman.d/gnupg/gpg.conf"

receive_key() { \
    local _pgpkey="A62D56CABD8DD76E"
    echo "#####################################"
    echo "## Adding PGP key $_pgpkey         ##"
    echo "#####################################"
    sudo pacman-key --recv-key $_pgpkey
    sudo pacman-key --lsign-key $_pgpkey
}

receive_key || error "Error receiving PGP key $_pgpkey"

# Let's install each package listed in the pkglist.txt file.
sudo pacman --needed --ask 4 -Sy - < pkglist.txt || error "Failed to install required packages."

echo "############################################################"
echo "## Installing other package. This may take a few minutes. ##"
echo "############################################################"

sudo pacman -Sy curl dunst noto-fonts noto-fonts-cjk noto-fonts-emoji noto-fonts-extra npm nodejs moc neofetch htop github-cli acpid duf ncdu telegram-desktop wget tmux sd vifm ueberzug diff-so-fancy gvfs xmonad xmobar xmonad-contrib libx11 libxinerama libxrandr libxinerama htop fish || error "failed"


echo "################################################################"
echo "##               Copying dotfiles configuration               ##"
echo "################################################################"
cd ~ && git clone https://github.com/angel-altuve/dotfiles.git
cp -r ~/dotfiles/.config ~/
cp -r ~/dotfiles/.local/bin ~/.local/
cp ~/dotfiles/.xinitrc ~/
cp ~/dotfiles/.Xresources ~/
cp ~/dotfiles/.Xmodmap ~/
cp ~/dotfiles/.moc ~/
cp ~/dotfiles/.nano ~/
cp ~/dotfiles/.nanorc ~/
cp ~/dotfiles/.tmux ~/
ln -s -f .tmux/.tmux.conf
cp ~/dotfiles/.tmux.conf.local ~/
cp ~/dotfiles/.bashrc ~/
cp ~/dotfiles/.bash_profile ~/


# Change all scripts in .local/bin to be executable.
find $HOME/.local/bin -type f -print0 | xargs -0 chmod 775

echo "#########################################################"
echo "## Installing Doom Emacs. This may take a few minutes. ##"
echo "#########################################################"
git clone --depth 1 https://github.com/hlissner/doom-emacs ~/.emacs.d
~/.emacs.d/bin/doom --force install
~/.emacs.d/bin/doom sync

[ ! -d /etc/pacman.d/hooks ] && sudo mkdir /etc/pacman.d/hooks
sudo cp ~/dotfiles/xmonad/.config/xmonad/pacman-hooks/recompile-xmonad.hook /etc/pacman.d/hooks/
sudo cp ~/dotfiles/xmonad/.config/xmonad/pacman-hooks/recompile-xmonadh.hook /etc/pacman.d/hooks/


xmonad_recompile() { \
    echo "########################"
    echo "## Recompiling XMonad ##"
    echo "########################"
    xmonad --recompile
}

xmonad_recompile || echo "Recompiling Xmonad failed!"

xmonadctl_compile() { \
    echo "####################################"
    echo "## Compiling the xmonadctl script ##"
    echo "####################################"
    ghc -dynamic "$HOME"/.config/xmonad/xmonadctl.hs
}

xmonadctl_compile || echo "Compiling the xmonadctl script failed!"

            sudo chsh $USER -s "/bin/fish" && \
            echo -e "$choice has been set as your default USER shell. \
                    \nLogging out is required for this take effect."

  echo "####################################"
  echo "##          install paru          ##"
  echo "####################################"
       cd ~ && git clone https://aur.archlinux.org/paru.git && cd paru
       makepkg -si
       rm -rf ../paru || error "failed delete paru folder"

echo "##############################"
echo "##  has been installed! ##"
echo "##############################"

while true; do
    read -p "you want to start xmonad? [Y/n] " yn
    case $yn in
        [Yy]* ) startx ~/.xinitrc;;
        [Nn]* ) break;;
        "" ) startx ~/.xinitrc;;
        * ) echo "Please answer yes or no.";;
    esac
done
